{"version":3,"sources":["components/Employees/Employees.module.css","utils/getDate.jsx","context/context.jsx","components/Employees/EmployeeBirthList.jsx","components/Employees/EmployeeBirth.jsx","components/Employees/EmploeesList.jsx","components/Employees/Employees.jsx","services/service-api.jsx","App.js","index.js"],"names":["module","exports","months","getDate","str","date","Date","day","toLocaleDateString","month","year","getAllMonths","getMonth","firstPartOfMonth","slice","seconfParetOfMonth","MyContext","createContext","EmployeeBirthList","user","className","s","employee__birthList","firstName","lastName","dob","EmployeeBirth","useContext","isActive","users","sortedUsers","filter","includes","id","sort","a","b","localeCompare","employee__b","employee__title","length","employee__empty","employee__birth","map","isExistEmployee","employee__month","employee__monthList","EmployeesList","setIsActive","isExist","some","userId","changeInput","index","indexOf","el","employee__list","employee__item","active","type","value","name","checked","onChange","Employees","employee","employee__wrap","letter","i","employee__alphabet","BASE_URL","axios","get","response","fetchUsers","App","useState","setUsers","JSON","parse","localStorage","getItem","API","data","useEffect","getUser","setItem","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,gBAAkB,mCAAmC,YAAc,+BAA+B,eAAiB,kCAAkC,mBAAqB,sCAAsC,eAAiB,kCAAkC,eAAiB,kCAAkC,OAAS,0BAA0B,gBAAkB,mCAAmC,gBAAkB,mCAAmC,gBAAkB,mCAAmC,oBAAsB,uCAAuC,oBAAsB,yC,kMCDvlBC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAQ,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGhHC,EAAU,SAACC,GAChB,IAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAMF,EAAKG,mBAAmB,QAAS,CAACD,IAAK,YAC7CE,EAAQJ,EAAKG,mBAAmB,QAAS,CAAEC,MAAO,SAClDC,EAAOL,EAAKG,mBAAmB,QAAS,CAAEE,KAAM,YAEtD,MAAM,GAAN,OAAUH,EAAV,YAAiBE,EAAjB,aAA2BC,EAA3B,UAIKC,EAAe,WAC5B,IAAMF,GAAQ,IAAIH,MAAOM,WACnBC,EAAmB,UAAIX,GAAQY,MAAML,GACrCM,EAAqB,UAAIb,GAAQY,MAAM,EAAGL,GAE/C,MAAM,GAAN,mBAAWI,GAAX,YAAgCE,KChBpBC,EAAYC,0B,OCYVC,EATW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEzB,OACI,qBAAIC,UAAWC,IAAEC,oBAAjB,UACSH,EAAKI,UADd,IAC0BJ,EAAKK,SAD/B,MAC4CrB,EAAQgB,EAAKM,SCoClDC,EAvCO,WAClB,MAA2BC,qBAAWX,GAA/BY,EAAP,EAAOA,SAAWC,EAAlB,EAAkBA,MAEZC,EAAc,YAAID,GACnBE,QAAO,SAAAZ,GAAI,OAAIS,EAASI,SAASb,EAAKc,OACtCC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEX,SAASa,cAAcD,EAAEZ,aAI/C,OACI,sBAAKJ,UAAWC,IAAEiB,YAAlB,UACI,oBAAIlB,UAAWC,IAAEkB,gBAAjB,gCACqB,IAApBX,EAASY,OACJ,mBAAGpB,UAAWC,IAAEoB,gBAAhB,qCACA,oBAAIrB,UAAWC,IAAEqB,gBAAjB,SACG/B,IAAegC,KAAI,SAAAlC,GAChB,IAAImC,GAAkB,EACtB,OACI,qBAAIxB,UAAWC,IAAEwB,gBAAjB,UACI,mBAAGzB,UAAWC,IAAEyB,oBAAhB,SAAsCrC,IAC1C,+BACKqB,EACIC,QAAO,gBAAGN,EAAH,EAAGA,IAAH,OAAatB,EAAQsB,GAAKO,SAASvB,MAC1CkC,KAAI,SAAAxB,GAEL,OADAyB,GAAkB,EAEhB,cAAC,EAAD,CAAiCzB,KAAMA,GAAfA,EAAKc,OAE9BW,GACG,iDAX2BnC,YCkBpDsC,EAtCO,SAAC,GAA+B,IAA9Bd,EAA6B,EAA7BA,GAAIV,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SACnC,EAAiCG,qBAAWX,GAApCY,EAAR,EAAQA,SAAUoB,EAAlB,EAAkBA,YACZC,GAAWrB,EAASsB,MAAK,SAAAC,GAAM,OAAIA,IAAWlB,KAG9CmB,EAAc,SAAAnB,GAAE,OAAI,WAC1B,IAAMoB,EAAQzB,EAAS0B,QAAQrB,GAC5Be,EAAYK,GAAS,EAAIzB,EAASG,QAAO,SAAAwB,GAAE,OAAIA,IAAOtB,KAA1C,sBAAoDL,GAApD,CAA8DK,OAG7E,OACK,qBAAab,UAAWC,IAAEmC,eAA1B,UACG,qBAAIpC,UAAY6B,EAEV5B,IAAEoC,gBADDpC,IAAEoC,eAAgBpC,IAAEqC,QAD3B,UAEyBnC,EAFzB,IAEqCC,KAClC,kCACI,uBACCmC,KAAK,QACJC,MAAM,WACNC,KAAM5B,EACN6B,QAASb,EACTc,SAAUX,EAAYnB,KAN5B,gBASC,kCACI,uBACG0B,KAAK,QACLC,MAAM,SACNC,KAAM5B,EACN6B,SAAUb,EACVc,SAAUX,EAAYnB,KAN7B,cAbEA,IC8BH+B,EAvCG,WACd,IAAQnC,EAAUF,qBAAWX,GAArBa,MAEFC,EAAc,YAAID,GAAOK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEZ,UAAUc,cAAcD,EAAEb,cAE1E,OAEI,sBAAKH,UAAWC,IAAE4C,SAAlB,UACI,oBAAI7C,UAAWC,IAAEkB,gBAAjB,uBACA,qBAAKnB,UAAWC,IAAE6C,eAAlB,SAPS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAQ7HvB,KAAI,SAACwB,EAAQC,GACnB,IAAIH,GAAW,EAElB,OACC,sBAAa7C,UAAWC,IAAEgD,mBAA1B,UACO,6BAAKF,IACJrC,EAAYa,KAAI,YAAgC,IAA9BV,EAA6B,EAA7BA,GAAIV,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAC/B,GAAI2C,IAAW5C,EAAU,GAGrB,OAFA0C,GAAW,EAGP,cAAC,EAAD,CAEIhC,GAAIA,EACJV,UAAWA,EACXC,SAAUA,GAHLS,OAQlBgC,GAAY,gDAhBXG,Y,iBClBlBE,EAAW,iE,4CAEjB,4BAAAnC,EAAA,sEAC2BoC,IAAMC,IAAIF,GADrC,cACUG,EADV,yBAEWA,GAFX,4C,sBAKeC,M,2CCkCAC,MApCf,WAAgB,IAAD,EACb,EAA0BC,mBAAS,IAAnC,mBAAO/C,EAAP,KAAcgD,EAAd,KACA,EAAgCD,mBAAQ,UACtCE,KAAKC,MAAMC,aAAaC,QAAQ,oBADM,QACU,IADlD,mBAAOrD,EAAP,KAAiBoB,EAAjB,KAFa,4CAeb,4BAAAb,EAAA,sEACyB+C,IADzB,OACQT,EADR,OAEEI,EAASJ,EAASU,MAFpB,4CAfa,sBAoBb,OAdAC,qBAAU,YANG,mCAOXC,KACC,IAEHD,qBAAU,WACRJ,aAAaM,QAAQ,WAAYR,KAAKS,UAAL,OAAe3D,QAAf,IAAeA,IAAY,KAC5DoD,aAAaM,QAAQ,QAASR,KAAKS,UAAL,OAAe1D,QAAf,IAAeA,IAAS,OACrD,CAACD,EAAUC,IAQZ,cAACb,EAAUwE,SAAX,CACE5B,MAAO,CACL/B,QACAD,WACAoB,eAJJ,SAOE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,CAAWS,MAAOA,IAClB,cAAC,EAAD,UC/BR4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.40a6f8b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"employee__title\":\"Employees_employee__title__292b5\",\"employee__b\":\"Employees_employee__b__Kesis\",\"employee__wrap\":\"Employees_employee__wrap__17ana\",\"employee__alphabet\":\"Employees_employee__alphabet__30M8L\",\"employee__list\":\"Employees_employee__list__1toT3\",\"employee__item\":\"Employees_employee__item__1bpZZ\",\"active\":\"Employees_active__wKj-d\",\"employee__empty\":\"Employees_employee__empty__3vv_z\",\"employee__birth\":\"Employees_employee__birth__1rYq7\",\"employee__month\":\"Employees_employee__month__2hJmv\",\"employee__monthList\":\"Employees_employee__monthList__2O-vZ\",\"employee__birthList\":\"Employees_employee__birthList__2fGuM\"};","const months = [\"January\", \"February\", \"March\", \"April\",\"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\r\n\r\nexport const getDate = (str) => {\r\n        const date = new Date(str)\r\n        const day = date.toLocaleDateString('en-GB', {day: 'numeric'})\r\n        const month = date.toLocaleDateString('en-GB', { month: 'long' })\r\n        const year = date.toLocaleDateString('en-GB', { year: 'numeric' })\r\n\r\n        return `${day} ${month}, ${year} year`\r\n}\r\n \r\n\r\nexport const getAllMonths = () => {\r\nconst month = new Date().getMonth();\r\nconst firstPartOfMonth = [...months].slice(month)\r\nconst seconfParetOfMonth = [...months].slice(0, month)\r\n        \r\n return [...firstPartOfMonth, ...seconfParetOfMonth]\r\n}\r\n","import { createContext } from 'react';\r\n\r\nexport const MyContext = createContext();","import React from 'react';\r\nimport s from './Employees.module.css'\r\nimport { getDate} from '../../utils/getDate';\r\n\r\n\r\nconst EmployeeBirthList = ({ user }) => {\r\n    \r\n    return (\r\n        <li className={s.employee__birthList}>\r\n                {user.firstName} {user.lastName} - {getDate(user.dob)}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default EmployeeBirthList","import React, { useContext}from 'react';\r\nimport s from './Employees.module.css'\r\nimport { getAllMonths, getDate } from '../../utils/getDate';\r\nimport { MyContext } from '../../context/context';\r\nimport EmployeeBirthList from './EmployeeBirthList';\r\n\r\nconst EmployeeBirth = () => {\r\n    const {isActive,  users} = useContext(MyContext)\r\n    \r\n    const sortedUsers = [...users]\r\n        .filter(user => isActive.includes(user.id))\r\n        .sort((a, b) => a.lastName.localeCompare(b.lastName))\r\n    \r\n\r\n\r\n    return (\r\n        <div className={s.employee__b}>\r\n            <h2 className={s.employee__title} >Employees Birthday</h2>\r\n            {isActive.length === 0\r\n                ? <p className={s.employee__empty}>Employees List is empty</p>\r\n                : <ul className={s.employee__birth}>\r\n                    {getAllMonths().map(month => {\r\n                        let isExistEmployee = true\r\n                        return (\r\n                            <li className={s.employee__month} key={month}>\r\n                                <p className={s.employee__monthList}>{month}</p>\r\n                            <ul>\r\n                                {sortedUsers\r\n                                    .filter(({ dob }) => getDate(dob).includes(month))\r\n                                    .map(user => {\r\n                                    isExistEmployee = false\r\n                                    return (\r\n                                      <EmployeeBirthList key={user.id} user={user} />\r\n                                     ) }) }\r\n                                    {isExistEmployee &&\r\n                                        <p>No Employee</p>\r\n                                    }\r\n                              </ul>\r\n                           </li>\r\n                              )})}\r\n                     </ul>\r\n            }\r\n        </div>\r\n    )}\r\n\r\nexport default EmployeeBirth\r\n","import React, { useContext } from 'react';\r\nimport s from './Employees.module.css'\r\nimport { MyContext } from '../../context/context';\r\n\r\nconst EmployeesList = ({id, firstName, lastName}) => {\r\n    const { isActive, setIsActive} = useContext(MyContext)\r\n    const isExist = !isActive.some(userId => userId === id)\r\n\r\n    \r\n    const changeInput = id => () => {\r\n    const index = isActive.indexOf(id)\r\n       setIsActive(index >= 0 ? isActive.filter(el => el !== id) : [...isActive, id])\r\n   }\r\n\r\n    return (\r\n         <ul key={id} className={s.employee__list}>\r\n            <li className={!isExist\r\n                ? (s.employee__item, s.active)\r\n                : s.employee__item}>{firstName} {lastName}</li>\r\n               <label>\r\n                   <input\r\n                    type=\"radio\"\r\n                     value='noActive'\r\n                     name={id}\r\n                     checked={isExist}\r\n                     onChange={changeInput(id)} />\r\n                              not active\r\n               </label>\r\n                <label>\r\n                    <input\r\n                       type=\"radio\"\r\n                       value='active'\r\n                       name={id}\r\n                       checked={!isExist}\r\n                       onChange={changeInput(id)} />\r\n                               active\r\n                    </label>\r\n        </ul>\r\n      \r\n    )\r\n}\r\n\r\nexport default EmployeesList","import React, {useContext} from 'react';\r\nimport s from './Employees.module.css'\r\nimport EmployeesList from './EmploeesList';\r\nimport { MyContext } from '../../context/context';\r\n\r\n\r\nconst Employees = () => {\r\n    const { users } = useContext(MyContext)\r\n    const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\r\n    const sortedUsers = [...users].sort((a, b) => a.firstName.localeCompare(b.firstName));\r\n    \r\n    return (\r\n       \r\n        <div className={s.employee}>\r\n            <h1 className={s.employee__title} >Employees</h1>\r\n            <div className={s.employee__wrap}>\r\n            {alphabet.map((letter, i) => {\r\n                let employee = false\r\n                \r\n             return (\r\n              <div key={i} className={s.employee__alphabet}>\r\n                     <h2>{letter}</h2>\r\n                     {sortedUsers.map(({id, firstName, lastName}) => {\r\n                        if (letter === firstName[0]) {\r\n                            employee = true;\r\n\r\n                            return (\r\n                                <EmployeesList\r\n                                    key={id}\r\n                                    id={id}\r\n                                    firstName={firstName}\r\n                                    lastName={lastName}\r\n                                />\r\n                             );\r\n                             }\r\n                     } )}\r\n                     {!employee && <h4>No Employees</h4>}\r\n             </div>\r\n                )\r\n            })}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Employees","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://yalantis-react-school-api.yalantis.com/api/task0/users'\r\n\r\nasync function fetchUsers() {\r\n    const response = await axios.get(BASE_URL)\r\n    return response\r\n}\r\n\r\nexport default fetchUsers","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport EmployeeBirth from './components/Employees/EmployeeBirth';\nimport Employees from './components/Employees/Employees';\nimport API from './services/service-api';\nimport { MyContext } from './context/context';\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [isActive, setIsActive] = useState(\n    JSON.parse(localStorage.getItem('isActive')) ?? [],\n  );\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('isActive', JSON.stringify(isActive ?? []));\n    localStorage.setItem('users', JSON.stringify(users ?? []));\n  }, [isActive, users]);\n\n  async function getUser() {\n    const response = await API();\n    setUsers(response.data);\n  }\n\n  return (\n    <MyContext.Provider\n      value={{\n        users,\n        isActive,\n        setIsActive,\n      }}\n    >\n      <div className=\"App\">\n        <Employees users={users} />\n        <EmployeeBirth />\n      </div>\n    </MyContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}